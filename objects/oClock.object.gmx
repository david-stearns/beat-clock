<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>startTime = 0;
currentTime = 0;
seconds = 0;
bpm = 120;
ppqn = 968; // ticks per quarter note
tps = bpm/60 * ppqn; // ticks per second 
tick = 0;
nextTick = tick + tps/room_speed;

runClock = true;
pauseTime = 0;
totalPaused = 0;
count = 0;

trigger32 = false;
next32 = 0;
sub32 = 0;

trigger16 = false;
next16 = 0; //242 ticks per 16th
sixteenths = 0;
sub16 = 0; //current sub-beat in 16ths (1-4 for 4/4 time)

trigger8 = false;
eights = 0;

trigger4 = false;
quarters = 0
next4 = 0 //4 * 242; // 4 16th notes in a quarter * 242 ticks per 16th 
prev4 = next4;

triggerMeasure = false;
measures = 0;

beat = 0;

drawBeatCircle = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Reset Triggers
trigger32 = false;
trigger16 = false;
trigger8 = false;
trigger4 = false;
triggerMeasure = false;

if runClock {
    if startTime == 0 {
        startTime = get_timer();
        tps = bpm/60 * ppqn;
        }

    currentTime = get_timer();
    seconds = (currentTime - startTime - totalPaused)/1000000;
    tick = tps * seconds;
    nextTick = tick + tps/room_speed;

    // Trigger 16th notes
    if bc_hit_target(next16)
        trigger16 = true;
    
    if bc_hit_target(next32)
        trigger32 = true;
       
    if trigger16 and (sixteenths mod 2 == 0) {
        trigger8 = true
        }        
    
    if trigger16 and (sixteenths mod 4 == 0) {
        trigger4 = true
        }
    
    if trigger16 and (sixteenths mod 16 == 0) {
        triggerMeasure = true
        }   
    }       

if trigger32 {
    next32 += ppqn/8;
    sub32 ++;
    if sub32 == 9 sub32 = 1;
    }
    
if trigger16 {
    next16 += ppqn/4;
    sixteenths ++;
    sub16 ++;
    if sub16 == 5 sub16 = 1;
    }

if trigger8 {
    eights ++;
    }

if trigger4 {
    prev4 = next4;
    next4 += ppqn;
    quarters ++;
    beat ++;
    if beat == 5
        beat = 1;
    }

if triggerMeasure {
    measures ++;
    }    
    
       

    
    

    

    
    
    
    
    
    
    
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Debug
if room == bc_test_room {
    if keyboard_check_pressed(vk_space) {
        bc_pause()
        }
    if keyboard_check_pressed(ord('R')) {
        bc_reset()
        runClock = false;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Debug Info

if room == bc_test_room {
    draw_set_color(c_red);
    draw_set_alpha(1);
    /*
    draw_text(0,0,"seconds " + string(seconds));
    draw_text(0,20,"tick " + string(tick));
    draw_text(0,40,"prev4 " + string(prev4));
    draw_text(0,60,"next4 " + string(next4));
    */
    draw_text(0,200,"sixteenths " + string(sixteenths));
    draw_text(0,220,"eights " + string(eights));
    draw_text(0,240,"quarters " + string(quarters));
    draw_text(0,260,"measures " + string(measures));
    
    draw_text(0,300,"sub32 " + string(sub32));
    
    var q, e, s, t;
    if quarters &gt; 4 {if quarters mod 4 == 0 q = 4; else q = quarters mod 4;}  else q = quarters;
    if tick &gt; ppqn {if tick mod ppqn == 0 t = ppqn; else t = tick mod ppqn} else t = tick;
    t = round(t);  
    
    draw_text(0,340, string(measures) + ". " + string(q)+ ". " + string(t));
    
    if trigger4 {
        drawBeatCircle = true;
        }
    if trigger8 and !trigger4 {
        drawBeatCircle = false;
        }
    
    if drawBeatCircle {
        draw_circle(room_width/2, room_height/2, 100, false);
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
